*Tail.txt*	   Watch the contents of a file in real time

Author: Jason Heddings (jason@heddings.com)
	Martin Krischik (krischik@users.sourceforge.net)
For Vim version 7.0 and above
Last change: 17 September, 2007

1. Overview                                     |tail-about|
2. Commands                                     |tail-commands|
2. Mappings                                     |tail-mappings|
3. Configuration				|tail-configure|

==============================================================================
                                                *tail-about*
1. Overview~

Tail allows you to view the contents of a file in real time.  When a
change in the file is detected, the window displaying the file is updated and
repositioned to the last line.

The update is not exactly real time, but usually updates within a few seconds
of the file change.  The update interval of the output is determined by the
|updatetime| parameter, along with continued usage of Vim.  This means that if
you are not doing any editing or motion commands, the preview window will not
be updated.  See |CursorHold| for more information.

Because this window becomes the preview window, it will accept all related
commands.  For more information, see |preview-window|.

==============================================================================
							       *tail-commands*
2. Commands~

The Tail plugin does not create any automatic mappings, but provides the
following commands:

|:Tail|          begin watching the specified file
|:STail|         Same as :Tail
|:TabTail|       begin watching the specified files in seperate Tabs

							      *:Tail* *:STail*
:Tail <filename>
:STail <filename>
        Begin watching the specified file in the preview window.  This will
        cause any existing preview windows to be closed.  If the file is
        already open in another buffer, that buffer will be wiped out.

								    *:TabTail*
:TabTail  <filenames>
        Begin watching the specified files in tabed preview windows.

Once open, the window accepts all preview window commands.  For example, to
close the preview window, use |:pclose|.

							       *:vim-tail.zsh*

You can also open one or more files for (tabbed) tailing using |vim-tail.zsh|
which is provided in the macros directory. |vim-tail.zsh| will use a single
gvim server and |:TabTail| to open the files.

==============================================================================
							       *tail-mappings*
2. Mappings~

Once the Tail windows is opened it offeres the following mappings:

<i> :setlocal wrap<CR>
<I> :setlocal nowrap<CR>

<a> :setlocal number<CR>
<A> :setlocal nonumber<CR>

<o> :setlocal statusline=%F\ %{tail#Status()}<CR>
<O> :setlocal statusline<<CR>

<r> :call tail#Refresh ()<CR>
<R> :view!<CR>

==============================================================================
                                                *tail-configure*
3. Configuration~

Tail may be customized using variables set by the |let| command in your
.vimrc file.  The default values for the options are shown in square brackets.

|'Tail_Height'|      Specify the height of the preview window [10]
|'Tail_Center_Win'|  Center the output in the preview window   [0]

                                                *'Tail_Height'*
Tail_Height~
  Using this setting, you can alter the height of the preview window that is
  created when |:Tail| is called for a file.  >
      let g:Tail_Height = 12
<
Tail_Center_Win~
  When set to true, this will cause the last line of the output to be centered
  in the preview window.  By default, the last line of output will be on the
  last line of the window >
      let g:Tail_Center_Win = 1
<
==============================================================================
vim:textwidth=78:tabstop=8:noexpandtab:filetype=help
